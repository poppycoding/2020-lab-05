0.==================>>查询关联关系




1.==================>>db
# 查看db-db

match
(d:DbInfo),
(d1:DbInfo) -[r:TABLE_INFO]-> (t1:TableInfo),
(t1) <-[r2:IMPACT]-(k:KettleInfo),
(k) <-[r3:LINEAGE]-(t2:TableInfo),
(t2) <-[r4:TABLE_INFO]- (d2 :DbInfo)
where k.jobName ='kettle(ft)' and d1.id <> d2.id
return{
keyInfo: collect(d.id),
arrowInfo: collect(distinct { dId1:d1.id, dId2:d2.id, tId1:t1.id, tId2:t2.id, kId:k.id })}

match
(d:DbInfo),
(d1:DbInfo) -[r:TABLE_INFO]-> (t1:TableInfo),
(t1) <-[r2:IMPACT]-(k:KettleInfo),
(k) <-[r3:LINEAGE]-(t2:TableInfo),
(t2) <-[r4:TABLE_INFO]- (d2 :DbInfo)
where (k.jobName ={0} or ({0} is null)) and d1.id <> d2.id
return{
keyInfo: collect(d.id),
arrowInfo: collect(distinct { dId1:d1.id, dId2:d2.id, tId1:t1.id, tId2:t2.id, kId:k.id })}

match (d:DbInfo),(d1:DbInfo) -[r:TABLE_INFO]-> (t1:TableInfo), (t1) <-[r2:IMPACT]-(k:KettleInfo), (k) <-[r3:LINEAGE]-(t2:TableInfo), (t2) <-[r4:TABLE_INFO]- (d2 :DbInfo) where (k.jobName ={0} or ({0} is null)) and d1.id <> d2.id return{ keyInfo: collect(d.id), arrowInfo: collect(distinct { dId1:d1.id, dId2:d2.id, tId1:t1.id, tId2:t2.id, kId:k.id })}









2.==================>>table
MATCH p =(a)-->(b)-->(c)
WHERE a.id = 'table-mysql@192.168.241.243@3306@sourcedata@sourcedata@test_table_2'
MATCH
(a) -[r1:COLUMN_INFO]- (b),(b) -[r2:FK_TABLE]- (c)
RETURN {center: ( {id:a.id, name:a.tableName,category:'center'}) , around: collect({id: c.id, name:c.tableName,category:'around'})}

MATCH p =(a)-->(b)-->(c) WHERE a.id = {0} MATCH (a) -[r1:COLUMN_INFO]- (b),(b) -[r2:FK_TABLE]- (c) RETURN {center: ( {id:a.id, name:a.tableName,category:'center'}) , around: collect({id: c.id, name:c.tableName,category:'around'})}


