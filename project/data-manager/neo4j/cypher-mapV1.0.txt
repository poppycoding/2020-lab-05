0.==================>>查询关联关系




1.==================>>db
# 查看db-db
match
(d:DbInfo),(d1:DbInfo) -[r]- (t1:TableInfo), (t1) -[r2]-(k:KettleInfo), (k) -[r3]-(t2:TableInfo), (t2) -[r4]- (d2 :DbInfo)
return *


match
(d:DbInfo),
(d1:DbInfo) -[r:TABLE_INFO]-> (t1:TableInfo),
(t1) <-[r2:IMPACT]-(k:KettleInfo),
(k) <-[r3:LINEAGE]-(t2:TableInfo),
(t2) <-[r4:TABLE_INFO]- (d2 :DbInfo)
return *


match
(d:DbInfo),
(d1:DbInfo) -[r:TABLE_INFO]-> (t1:TableInfo),
(t1) <-[r2:IMPACT]-(k:KettleInfo),
(k) <-[r3:LINEAGE]-(t2:TableInfo),
(t2) <-[r4:TABLE_INFO]- (d2 :DbInfo)
return  collect({dId1: d1.id, dId2: d2.id, tId1: t1.id, tId2: t2.id, kId: k.id })


match
(d1:DbInfo) -[r:TABLE_INFO]-> (t1:TableInfo),
(t1) <-[r2:IMPACT]-(k:KettleInfo),
(k) <-[r3:LINEAGE]-(t2:TableInfo),
(t2) <-[r4:TABLE_INFO]- (d2 :DbInfo)
where k.jobName = 'skip-db'
with distinct d1,d2,t1,t2,k
return collect({ dId1:d1.id, dId2:d2.id, tId1:t1.id, tId2:t2.id, kId:k.id })



match
(d:DbInfo),
(d1:DbInfo) -[r:TABLE_INFO]-> (t1:TableInfo),
(t1) <-[r2:IMPACT]-(k:KettleInfo),
(k) <-[r3:LINEAGE]-(t2:TableInfo),
(t2) <-[r4:TABLE_INFO]- (d2 :DbInfo)
where  k.jobName = 'skip-db' and d.id <> d1.id and d.id <> d2.id
with distinct d,d1,d2,t1,t2,k
return {db:collect({ dId:d.id}), data:collect({ dId1:d1.id, dId2:d2.id, tId1:t1.id, tId2:t2.id, kId:k.id })}




match
(d1:DbInfo) -[r:TABLE_INFO]-> (t1:TableInfo),
(t1) <-[r2:IMPACT]-(k:KettleInfo),
(k) <-[r3:LINEAGE]-(t2:TableInfo),
(t2) <-[r4:TABLE_INFO]- (d2 :DbInfo)
where k.jobName = 'skip-db'
with distinct d1,d2,t1,t2,k
return
collect({ dId1:d1.id, dId2:d2.id, tId1:t1.id, tId2:t2.id, kId:k.id }) as a,
collect({ db:d1.id, db:d2.id}) as b




match
(d1:DbInfo) -[r:TABLE_INFO]-> (t1:TableInfo),
(t1) <-[r2:IMPACT]-(k:KettleInfo),
(k) <-[r3:LINEAGE]-(t2:TableInfo),
(t2) <-[r4:TABLE_INFO]- (d2 :DbInfo)
where k.jobName ='kettle(ft)' and d1.id <> d2.id and d1.dbName CONTAINS 'orcl' or  d2.dbName CONTAINS 'orcl'
with distinct d1,d2,t1,t2,k
match
(d:DbInfo)
return
collect(distinct d.id) as a ,
collect(distinct d1.id) as b,
collect(distinct d2.id) as c,
collect({ dId1:d1.id, dId2:d2.id, tId1:t1.id, tId2:t2.id, kId:k.id }) as e



match
(d1:DbInfo) -[r:TABLE_INFO]-> (t1:TableInfo),
(t1) <-[r2:IMPACT]-(k:KettleInfo),
(k) <-[r3:LINEAGE]-(t2:TableInfo),
(t2) <-[r4:TABLE_INFO]- (d2 :DbInfo)
where k.jobName ='kettle(ft)' and d1.id <> d2.id and  d1.dbName CONTAINS 'orcl' or  d2.dbName CONTAINS 'orcl'
with distinct d1,d2,t1,t2,k
match
(d:DbInfo)
return{
x1: collect(distinct d.id),
x2: collect(distinct d1.id),
x3: collect(distinct d2.id),
x4: collect({ dId1:d1.id, dId2:d2.id, tId1:t1.id, tId2:t2.id, kId:k.id })}





match
(d:DbInfo),
(d1:DbInfo) -[r:TABLE_INFO]-> (t1:TableInfo),
(t1) <-[r2:IMPACT]-(k:KettleInfo),
(k) <-[r3:LINEAGE]-(t2:TableInfo),
(t2) <-[r4:TABLE_INFO]- (d2 :DbInfo)
where k.jobName ='kettle(ft)' and d1.id <> d2.id and  d1.dbName CONTAINS 'orcl' or  d2.dbName CONTAINS 'orcl'
return{
keyInfo: collect(d.id),
arrowInfo: collect(distinct { dId1:d1.id, dId2:d2.id, tId1:t1.id, tId2:t2.id, kId:k.id })}








2.==================>>table
MATCH p =(a)-->(b)-->(c)
WHERE a.id = 'table-mysql@192.168.241.243@3306@sourcedata@sourcedata@test_table_2'
MATCH
(a) -[r1:COLUMN_INFO]- (b),(b) -[r2:FK_TABLE]- (c)
RETURN {center: ( {id:a.id, name:a.tableName,category:'center'}) , around: collect({id: c.id, name:c.tableName,category:'around'})}

MATCH p =(a)-->(b)-->(c) WHERE a.id = {0} MATCH (a) -[r1:COLUMN_INFO]- (b),(b) -[r2:FK_TABLE]- (c) RETURN {center: ( {id:a.id, name:a.tableName,category:'center'}) , around: collect({id: c.id, name:c.tableName,category:'around'})}


